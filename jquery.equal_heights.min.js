/**
 * Equal Heights jQuery JavaScript Plugin v2.0.4
 * http://www.intheloftstudios.com/packages/js/jquery.equal_heights
 *
 * Equalize the heights of all child elements to the tallest child.
 *
 * Copyright 2013, Aaron Klump
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Thu Oct  9 15:03:34 PDT 2014
 *
 * Equalize the heights of all child elements to the tallest child.
 *   - filter: An optional selector string to filter which children are considered.
 *   - not: An optional selector string to filter which children are NOT considered.
 *   - target: Additional selector of targets where height will be applied; these nodes
 *     will not be used to calculate height, but will ONLY receive the calculated height
 *   - disable: bool: Reset the height AND return without applying
 *     equal-heights. Use this to reverse the effects of this plugin on earlier
 *     elements.
 *   - responsive: bool: should this be applied when viewport changes size?
 *   - delay: milliseconds to wait before applying height after viewport changes
 *
 * Usage: $(object).equalHeights();
 *        $(object).equalHeights({filter: 'h2'});
 *
 * The second example above will process only h2 children
 */(function(e,t,n,r){"use strict";function i(n,r){this.element=n;this.options=e.extend({},e.fn.equalHeights.defaults,r);if(!this.init())return this;var i=this.options.disable;if(this.options.responsive){this.options.disable=!1;var s=this;e(t).bind("resize",function(){clearTimeout(s.responsiveTimer);s.responsiveTimer=setTimeout(function(){s.respond(e(t).width())},s.options.delay)})}if(i){this.reset();return this}this.respond();return this}i.prototype.respond=function(e){this.options.reset&&this.reset();this.apply()};i.prototype.init=function(){this.length=0;this.height=null;this.responsiveTimer=null;if(e(this.element).length===0)return!1;var t=this.options.cssPrefix;this.targets=null;var n=null;e(this.element).each(function(){n===null?n=e(this).children():e.merge(n,e(this).children())});this.sample=this.filterElements(n);this.extras=null;this.length+=this.sample.length;if(this.options.target){this.extras=e(this.element).find(this.options.target);this.length+=this.extras.length}if(this.length<2)return!1;this.targets=this.sample.add(this.extras);this.element.hasClass(t+"processed")||this.targets.each(function(){var n=e(this).attr("style"),r,i;n&&(r=n.match(/height[ :]+(\d+)/))&&e(this).data(t+"original",r[1])});e(this.element).addClass(t+"processed");return!0};i.prototype.reset=function(){var t=this.options.cssPrefix;this.targets.height("").removeClass(t+"target");var n;this.targets.each(function(){(n=e(this).data(t+"original"))&&e(this).height(n)});return this};i.prototype.apply=function(){var n=!0;typeof this.options.beforeApply!="undefined"&&(n=this.options.beforeApply(this,e(t).width()));if(!n)return;var r=this.options.cssPrefix,i=this.options.minHeight;this.sample.each(function(){var t=e(this).outerHeight();i=Math.max(i,t)});this.targets.addClass(r+"target").height(i);this.height=i;typeof this.options.afterApply!="undefined"&&this.options.afterApply(this,e(t).width());return this};i.prototype.filterElements=function(e){if(e!==null){this.options.filter&&(e=e.filter(this.options.filter));this.options.not&&(e=e.not(this.options.not))}return e};e.fn.equalHeights=function(t){var n=new i(this,t),r=n.options.key===null?e.fn.equalHeights.instances.length:n.options.key;e.fn.equalHeights.instances[r]=n;return n};e.fn.equalHeights.instances=[];e.fn.equalHeights.defaults={key:null,minHeight:0,filter:null,not:null,target:null,disable:!1,reset:!0,responsive:!1,beforeApply:function(e,t){return!0},afterApply:function(e,t){return!0},delay:25,cssPrefix:"eqh-"};e.fn.equalHeights.version=function(){return"2.0.4"}})(jQuery,window,document);