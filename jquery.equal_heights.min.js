/**
 * Equal Heights jQuery JavaScript Plugin v2.0.5
 * http://www.intheloftstudios.com/packages/js/jquery.equal_heights
 *
 * Equalize the heights of all child elements to the tallest child.
 *
 * Copyright 2013, Aaron Klump
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Thu Dec  4 21:25:35 PST 2014
 *
 * Equalize the heights of all child elements to the tallest child.
 *   - filter: An optional selector string to filter which children are considered.
 *   - not: An optional selector string to filter which children are NOT considered.
 *   - target: Additional selector of targets where height will be applied; these nodes
 *     will not be used to calculate height, but will ONLY receive the calculated height
 *   - find: Used to target descendents that are deep inside the container, 
 *     rather than children.
 *   - disable: bool: Reset the height AND return without applying
 *     equal-heights. Use this to reverse the effects of this plugin on earlier
 *     elements.
 *   - responsive: bool: should this be applied when viewport changes size?
 *   - delay: milliseconds to wait before applying height after viewport changes
 *
 * Usage: $(object).equalHeights();
 *        $(object).equalHeights({filter: 'h2'});
 *
 * The second example above will process only h2 children
 *
 * @license
 */
!function($,t,i,e){"use strict";function s(i,e){if(this.element=i,this.options=$.extend({},$.fn.equalHeights.defaults,e),!this.init())return this;var s=this.options.disable;if(this.options.responsive){this.options.disable=!1;var n=this;$(t).bind("resize",function(){clearTimeout(n.responsiveTimer),n.responsiveTimer=setTimeout(function(){n.respond($(t).width())},n.options.delay)})}return s?(this.reset(),this):(this.respond(),this)}s.prototype.respond=function(t){this.options.reset&&this.reset(),this.apply()},s.prototype.init=function(){var t=this;if(this.length=0,this.height=null,this.responsiveTimer=null,0===$(this.element).length)return!1;var i=this.options.cssPrefix;this.targets=null;var e=null;return $(this.element).each(function(){var i=null;i=t.options.find?$(this).find(t.options.find):$(this).children(),null===e?e=i:$.merge(e,i)}),this.sample=this.filterElements(e),this.extras=null,this.length+=this.sample.length,this.options.target&&(this.extras=$(this.element).find(this.options.target),this.length+=this.extras.length),this.length<2?!1:(this.targets=this.sample.add(this.extras),this.element.hasClass(i+"processed")||this.targets.each(function(){var t=$(this).attr("style"),e;t&&(e=t.match(/height[ :]+(\d+)/))&&$(this).data(i+"original",e[1])}),$(this.element).addClass(i+"processed"),!0)},s.prototype.reset=function(){var t=this.options.cssPrefix;this.targets.height("").removeClass(t+"target");var i;return this.targets.each(function(){(i=$(this).data(t+"original"))&&$(this).height(i)}),this},s.prototype.apply=function(){var i=!0;if("undefined"!=typeof this.options.beforeApply&&(i=this.options.beforeApply(this,$(t).width())),i){var e=this.options.cssPrefix,s=this.options.minHeight;return this.sample.each(function(){var t=$(this).outerHeight();s=Math.max(s,t)}),this.targets.addClass(e+"target").height(s),this.height=s,"undefined"!=typeof this.options.afterApply&&this.options.afterApply(this,$(t).width()),this}},s.prototype.filterElements=function(t){return null!==t&&(this.options.filter&&(t=t.filter(this.options.filter)),this.options.not&&(t=t.not(this.options.not))),t},$.fn.equalHeights=function(t){var i=new s(this,t),e=null===i.options.key?$.fn.equalHeights.instances.length:i.options.key;return $.fn.equalHeights.instances[e]=i,i},$.fn.equalHeights.instances=[],$.fn.equalHeights.defaults={key:null,minHeight:0,find:null,filter:null,not:null,target:null,disable:!1,reset:!0,responsive:!1,beforeApply:function(t,i){return!0},afterApply:function(t,i){return!0},delay:25,cssPrefix:"eqh-"},$.fn.equalHeights.version=function(){return"2.0.5"}}(jQuery,window,document);